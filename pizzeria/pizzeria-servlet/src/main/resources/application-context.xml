<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
    	http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- This allow us to use application.properties and placeholders -->
    <context:property-placeholder location="classpath:application.properties" order="1" ignore-unresolvable="true" ignore-resource-not-found="true" />
    <context:property-placeholder location="application.properties" order="2" ignore-unresolvable="true" ignore-resource-not-found="true" />
    <context:property-placeholder location="/conf/application.properties" order="3" ignore-unresolvable="true" ignore-resource-not-found="true" />

    <!-- This allow us to use properties with java environment
    e.g JAVA_OPTS=-DdataSource.jdbcUrl=mysql://localhost:3306 -->
    <context:property-placeholder order="4" />

    <!-- Data Source -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl"
                  value="jdbc:${dataSource.jdbcUrl}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="io.github.joxit.pizzeria.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            </props>
        </property>
    </bean>

    <!-- Spring configuration for transaction (lazy loading and rollback) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Spring configuration for annotations -->
    <context:annotation-config/>
    <jpa:repositories base-package="io.github.joxit.pizzeria.persistence" />
    <context:component-scan base-package="io.github.joxit.pizzeria.persistence"/>
    <context:component-scan base-package="io.github.joxit.pizzeria.service"/>
    <context:component-scan base-package="io.github.joxit.pizzeria.mapper"/>
    <context:component-scan base-package="io.github.joxit.pizzeria.vertx" />

</beans>